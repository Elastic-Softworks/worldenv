name: WORLDSRC CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ created ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: worldsrc/package-lock.json

    - name: Install dependencies
      working-directory: ./worldsrc
      run: npm ci

    - name: Run linter
      working-directory: ./worldsrc
      run: npm run lint

    - name: Check formatting
      working-directory: ./worldsrc
      run: npm run format:check

    - name: Run tests
      working-directory: ./worldsrc
      run: npm test

    - name: Build package
      working-directory: ./worldsrc
      run: npm run build

  build-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
        cache-dependency-path: worldsrc/package-lock.json

    - name: Install dependencies
      working-directory: ./worldsrc
      run: npm ci

    - name: Validate package structure
      working-directory: ./worldsrc
      run: npm run validate

    - name: Check package size
      working-directory: ./worldsrc
      run: |
        npm pack --dry-run
        du -sh dist/

  publish:
    needs: [test, build-check]
    runs-on: ubuntu-latest
    if: github.event_name == 'release'

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
        cache-dependency-path: worldsrc/package-lock.json
        registry-url: 'https://registry.npmjs.org'

    - name: Install dependencies
      working-directory: ./worldsrc
      run: npm ci

    - name: Build for production
      working-directory: ./worldsrc
      run: npm run build:production

    - name: Publish to NPM
      working-directory: ./worldsrc
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
